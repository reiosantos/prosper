version: "3"

services:
    proxy:
        image: traefik:alpine   # the official Traefik docker image
        container_name: traefik
        restart: on-failure
        command: --api --docker # enables the web UI and tells Traefik to listen to docker
        ports:
            - 80:80     # the HTTP port
            - 443:443   # https Port
            - 8080:8080 # the Web UI (enabled by --api)
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./proxy/traefik.toml:/etc/traefik/traefik.toml
#            - ./proxy/acme.json:/acme.json

#    haproxy:
#        image: haproxy:latest
#        container_name: haproxy
#        restart: always
#        ports:
#            - 80:80
#            - 443:443
#            - 8080:8080
#        depends_on:
#            - rest-api
#            - es1
#            - kibana
#            - rabbitmq
#        volumes:
#            - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

    rest-api: &rest-api-def
        build: prosper-rest-api
        image: prosper-rest-api
        container_name: rest-api
        ports:
            - 8000:8000
        volumes:
            - ./prosper-rest-api:/usr/src/app/
        environment: &rest-api-env-def
            - DJANGO_SETTINGS_MODULE=prosper_investments.settings.docker
            - ENV=local
            - LOGSTASH_HOST=logstash
            - LOGSTASH_PORT=5959
            - ES_HOST=es1:9200
            - ES_USER=elastic
            - ES_PASSWORD=prosper
            - ES_APM_URL=http://apm-server:8200
            - DEBUG=true
            - DB_HOST=db
            - DB_NAME=prosper
            - DB_USERNAME=prosper
            - DB_PASSWORD=prosper
            - DB_PORT=3306
            - EMAIL_HOST_USER=yosam.db@gmail.com
            - EMAIL_HOST_PASSWORD=ronald@507
            - BASE_URL=http://local.prosperinv.com/api
            - RABBITMQ_DEFAULT_USER=prosper
            - RABBITMQ_DEFAULT_PASS=prosper-mq
            - RABBITMQ_HOST=rabbitmq
        links:
            - proxy:local.prosperinv.com
            - db
            - es1
            - rabbitmq
        depends_on:
            - proxy
            - db
            - es1
            - apm-server
            - rabbitmq
            - rest-api-celery-worker
        command: bash -c "pip install -r requirements.txt && bash ./docker/run.sh"
        labels:
            - traefik.enable=true
            - traefik.port=8000
            - traefik.api.backend=rest-api
            - traefik.api.frontend.passHostHeader=true
            - traefik.api.frontend.rule=Host:local.prosperinv.com;PathPrefixStrip:/api
            - traefik.static.backend=rest-api-static
            - traefik.static.frontend.rule=Host:local.prosperinv.com;PathPrefix:/admin,/media,/static,/silk

    rest-api-celery-worker:
        <<: *rest-api-def
        depends_on:
            - rabbitmq
        container_name: rest-api-celery-worker
        command: bash -c "pip install -r requirements.txt && celery -A prosper_investments.celery worker -E"
        ports:
            - '8000'
        labels:
            - celery=worker

    db:
        image: mysql:5.7
        container_name: db
        command: ["--general_log=1", "--log_output=TABLE", "--explicit_defaults_for_timestamp=1"]
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_PASSWORD=prosper
            - MYSQL_DATABASE=prosper
            - MYSQL_USER=prosper
        ports:
            - 3307:3306
        restart: always
        volumes:
            - ./tmp-docker-vol/mysql:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-proot"]
            interval: 30s
            timeout: 30s
            retries: 10

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        restart: on-failure
        ports:
            - 15672:15672
        volumes:
            - ./rabbitmq_data:/data
        environment:
            - RABBITMQ_DEFAULT_USER=prosper
            - RABBITMQ_DEFAULT_PASS=prosper-mq
            - RABBITMQ_ENABLE_MANAGEMENT_PLUGIN=true

    es1:
        tty: true
        build: elasticsearch/setup/es
        image: es1
        container_name: es1
        restart: on-failure
        environment:
            - ELASTIC_PASSWORD=prosper
            - ELASTIC_NODE_NAME=es1
            - ELASTIC_NODE_MASTER=true
            - ELASTIC_MASTER_NODES=[es1]
            - ELASTIC_UNICAST_HOSTS=[es1]
            - ELASTIC_HOST=0.0.0.0
        volumes:
            - ./elasticsearch/es1/data/:/usr/share/elasticsearch/data/
            - ./elasticsearch/es1/logs/:/usr/share/elasticsearch/logs/
            - ./elasticsearch/setup/es/:/opt/elastic
            - ./elasticsearch/setup/cert_blog/:/opt/cert_blog/
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        command: bash -c "./setup.sh"

#    es2:
#        tty: true
#        build: elasticsearch/setup/es
#        image: es2
#        container_name: es2
#        restart: on-failure
#        environment:
#            - ELASTIC_PASSWORD=prosper
#            - ELASTIC_NODE_NAME=es2
#            - ELASTIC_MASTER_NODES=[es1]
#            - ELASTIC_UNICAST_HOSTS=[es1, es2]
#            - ELASTIC_HOST=0.0.0.0
#        links:
#            - es1
#        volumes:
#            - ./elasticsearch/es2/data/:/usr/share/elasticsearch/data/
#            - ./elasticsearch/es2/logs/:/usr/share/elasticsearch/logs/
#            - ./elasticsearch/setup/es/:/opt/elastic/
#            - ./elasticsearch/setup/cert_blog/:/opt/cert_blog/
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#            nofile:
#                soft: 65536
#                hard: 65536
#        command: bash -c "./setup.sh"

    kibana:
        tty: true
        build: elasticsearch/setup/kibana
        image: kibana
        container_name: kibana
        restart: on-failure
        environment:
            - ELASTIC_PASSWORD=prosper
            - ELASTIC_HOSTS=["http://es1:9200"]
        volumes:
            - ./elasticsearch/kibana/data/:/var/lib/kibana/
            - ./elasticsearch/kibana/logs/:/var/log/kibana/
            - ./elasticsearch/setup/kibana/:/opt/kibana/
            - ./elasticsearch/setup/cert_blog/:/opt/cert_blog/
        links:
            - proxy:local.prosperinv.com
            - es1
        depends_on:
            - proxy
            - es1
        ports:
            - 5601:5601
        command: bash -c "./setup.sh"
        labels:
            - traefik.enable=true
            - traefik.backend=kibana
            - traefik.port=5601
            - traefik.frontend.passHostHeader=true
            - traefik.frontend.rule=Host:local.prosperinv.com;PathPrefixStrip:/kibana

    apm-server:
        tty: true
        build: elasticsearch/setup/apm-server
        image: apm-server
        container_name: apm-server
        restart: on-failure
        links:
            - kibana
            - es1
        depends_on:
            - es1
            - logstash
            - kibana
        volumes:
            - ./elasticsearch/apm-server/data/:/var/lib/apm-server/
            - ./elasticsearch/apm-server/logs/:/var/log/apm-server/
            - ./elasticsearch/setup/apm-server/:/opt/apm-server/
            - ./elasticsearch/setup/cert_blog/:/opt/cert_blog/
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        command: bash -c "./setup.sh"

    logstash:
        tty: true
        build: elasticsearch/setup/logstash
        image: logstash
        container_name: logstash
        restart: on-failure
        volumes:
            - ./elasticsearch/logstash/data/:/usr/share/logstash/data/
            - ./elasticsearch/logstash/logs/:/var/log/logstash/
            - ./elasticsearch/setup/logstash/:/opt/logstash/
            - ./elasticsearch/setup/cert_blog/:/opt/cert_blog/
        environment:
            - ELASTIC_USERNAME=elastic
            - ELASTIC_PASSWORD=prosper
        links:
            - es1
        depends_on:
            - es1
        command: bash -c "./setup.sh"
